{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context';\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories'; // [\n//     {\n//         id: 1,\n//         type: 'Income',\n//         amount: 50,\n//         category: 'Salary'\n//     }\n//     {\n//         id: 2,\n//         type: 'Expense',\n//         amount: 100,\n//         category: 'Pets'\n//     }\n//     {\n//         id: 3,\n//         type: 'Income',\n//         amount: 60,\n//         category: 'Business'\n//     }\n// ]\n\nconst useTransactions = title => {\n  _s();\n\n  resetCategories();\n  const {\n    transactions\n  } = useContext(ExpenseTrackerContext);\n  const transactionsPerType = transactions.filter(t => t.type === title);\n  const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n  transactionsPerType.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(c => c.amount > 0);\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    total,\n    chartData\n  };\n};\n\n_s(useTransactions, \"A6iGkhYpgttKQ3XBwH6If3ta7Ms=\");\n\nexport default useTransactions;","map":{"version":3,"sources":["/home/viswaas/Projects/Expense-tracker/expense/src/useTransactions.js"],"names":["useContext","ExpenseTrackerContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","transactions","transactionsPerType","filter","t","type","total","reduce","acc","currVal","amount","categories","forEach","category","find","c","filteredCategories","chartData","datasets","data","map","backgroundColor","color","labels"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,SAAQC,gBAAR,EAA0BC,iBAA1B,EAA6CC,eAA7C,QAAmE,wBAAnE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/BF,EAAAA,eAAe;AACf,QAAM;AAACG,IAAAA;AAAD,MAAiBP,UAAU,CAACC,qBAAD,CAAjC;AAEA,QAAMO,mBAAmB,GAAGD,YAAY,CAACE,MAAb,CAAqBC,CAAD,IAAMA,CAAC,CAACC,IAAF,KAAWL,KAArC,CAA5B;AACA,QAAMM,KAAK,GAAGJ,mBAAmB,CAACK,MAApB,CAA2B,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,IAAIC,OAAO,CAACC,MAA5D,EAAoE,CAApE,CAAd;AACA,QAAMC,UAAU,GAAGX,KAAK,KAAK,QAAV,GAAqBJ,gBAArB,GAAwCC,iBAA3D;AAGAK,EAAAA,mBAAmB,CAACU,OAApB,CAA6BR,CAAD,IAAK;AAC7B,UAAMS,QAAQ,GAAGF,UAAU,CAACG,IAAX,CAAiBC,CAAD,IAAMA,CAAC,CAACV,IAAF,KAAWD,CAAC,CAACS,QAAnC,CAAjB;AAEA,QAAGA,QAAH,EAAaA,QAAQ,CAACH,MAAT,IAAmBN,CAAC,CAACM,MAArB;AAChB,GAJD;AAMA,QAAMM,kBAAkB,GAAGL,UAAU,CAACR,MAAX,CAAmBY,CAAD,IAAKA,CAAC,CAACL,MAAF,GAAS,CAAhC,CAA3B;AACA,QAAMO,SAAS,GAAG;AACdC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,IAAI,EAAEH,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAMA,CAAC,CAACL,MAA/B,CADC;AAEPW,MAAAA,eAAe,EAAEL,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAMA,CAAC,CAACO,KAA/B;AAFV,KAAD,CADI;AAKdC,IAAAA,MAAM,EAAEP,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAKA,CAAC,CAACV,IAA9B;AALM,GAAlB;AAQA,SAAO;AAAEC,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAP;AACH,CAzBD;;GAAMlB,e;;AA2BN,eAAeA,eAAf","sourcesContent":["import { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context'\n\nimport {incomeCategories, expenseCategories, resetCategories} from './constants/categories'\n\n// [\n//     {\n//         id: 1,\n//         type: 'Income',\n//         amount: 50,\n//         category: 'Salary'\n//     }\n//     {\n//         id: 2,\n//         type: 'Expense',\n//         amount: 100,\n//         category: 'Pets'\n//     }\n//     {\n//         id: 3,\n//         type: 'Income',\n//         amount: 60,\n//         category: 'Business'\n//     }\n// ]\n\nconst useTransactions = (title) => {\n    resetCategories();\n    const {transactions} = useContext(ExpenseTrackerContext);\n\n    const transactionsPerType = transactions.filter((t)=> t.type === title);\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\n    const categories = title === 'Income' ? incomeCategories : expenseCategories\n\n\n    transactionsPerType.forEach((t)=>{\n        const category = categories.find((c)=> c.type === t.category)\n\n        if(category) category.amount += t.amount\n    })\n\n    const filteredCategories = categories.filter((c)=>c.amount>0)\n    const chartData = {\n        datasets: [{\n            data: filteredCategories.map((c)=> c.amount),\n            backgroundColor: filteredCategories.map((c)=> c.color),\n        }],\n        labels: filteredCategories.map((c)=>c.type)\n    }\n\n    return { total, chartData}\n}\n\nexport default useTransactions"]},"metadata":{},"sourceType":"module"}