[{"/home/viswaas/Projects/Expense-tracker/expense/src/index.js":"1","/home/viswaas/Projects/Expense-tracker/expense/src/App.js":"2","/home/viswaas/Projects/Expense-tracker/expense/src/components/Details/Details.jsx":"3","/home/viswaas/Projects/Expense-tracker/expense/src/components/Details/styles.js":"4","/home/viswaas/Projects/Expense-tracker/expense/src/styles.js":"5","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Main.jsx":"6","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/styles.js":"7","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Form/Form.jsx":"8","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Form/styles.jsx":"9","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/List/List.jsx":"10","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/List/styles.js":"11","/home/viswaas/Projects/Expense-tracker/expense/src/context/context.js":"12","/home/viswaas/Projects/Expense-tracker/expense/src/context/contextReducer.js":"13","/home/viswaas/Projects/Expense-tracker/expense/src/constants/categories.js":"14","/home/viswaas/Projects/Expense-tracker/expense/src/utils/formatDate.js":"15","/home/viswaas/Projects/Expense-tracker/expense/src/useTransactions.js":"16","/home/viswaas/Projects/Expense-tracker/expense/src/components/Snackbar/Snackbar.jsx":"17","/home/viswaas/Projects/Expense-tracker/expense/src/components/Snackbar/styles.js":"18","/home/viswaas/Projects/Expense-tracker/expense/src/components/InfoCard.jsx":"19"},{"size":419,"mtime":1610141696177,"results":"20","hashOfConfig":"21"},{"size":1657,"mtime":1610149328620,"results":"22","hashOfConfig":"21"},{"size":802,"mtime":1610149616934,"results":"23","hashOfConfig":"21"},{"size":247,"mtime":1610006902734,"results":"24","hashOfConfig":"21"},{"size":551,"mtime":1610007088984,"results":"25","hashOfConfig":"21"},{"size":1293,"mtime":1610149597922,"results":"26","hashOfConfig":"21"},{"size":489,"mtime":1610007927971,"results":"27","hashOfConfig":"21"},{"size":5123,"mtime":1610147549526,"results":"28","hashOfConfig":"21"},{"size":234,"mtime":1610008700123,"results":"29","hashOfConfig":"21"},{"size":1591,"mtime":1610064071510,"results":"30","hashOfConfig":"21"},{"size":398,"mtime":1610009640512,"results":"31","hashOfConfig":"21"},{"size":1004,"mtime":1610146374028,"results":"32","hashOfConfig":"21"},{"size":596,"mtime":1610145755361,"results":"33","hashOfConfig":"21"},{"size":1659,"mtime":1610064193182,"results":"34","hashOfConfig":"21"},{"size":349,"mtime":1610138091759,"results":"35","hashOfConfig":"21"},{"size":1461,"mtime":1610083704463,"results":"36","hashOfConfig":"21"},{"size":901,"mtime":1610147326731,"results":"37","hashOfConfig":"21"},{"size":195,"mtime":1610146760977,"results":"38","hashOfConfig":"21"},{"size":470,"mtime":1610148078823,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"azclzc",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/viswaas/Projects/Expense-tracker/expense/src/index.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/App.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Details/Details.jsx",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Details/styles.js",[],["80","81"],"/home/viswaas/Projects/Expense-tracker/expense/src/styles.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Main.jsx",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/styles.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Form/Form.jsx",["82"],"import React, {useState, useEffect, useContext} from 'react'\nimport {TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport useStyles from './styles'\nimport {ExpenseTrackerContext} from '../../../context/context'\nimport {v4 as uuidv4 } from 'uuid'\nimport {incomeCategories, expenseCategories} from '../../../constants/categories'\nimport formatDate from '../../../utils/formatDate'\nimport {useSpeechContext} from '@speechly/react-client'\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n}\n\nconst Form = () => {\n    const classes = useStyles()\n    const [formData, setFormData] = useState(initialState)\n    const {addTransaction} = useContext(ExpenseTrackerContext)\n    const {segment} = useSpeechContext()\n    const [open, setOpen] = useState(false)\n\n    const createTransaction = () => {\n        if(Number.isNaN(Number(formData.amount) || !formData.date.includes('-'))) return\n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\n        setOpen(true)\n        addTransaction(transaction)\n        setFormData(initialState)\n    }\n\n    useEffect(()=>{\n        if(segment){\n            if(segment.intent.intent === 'add_expense'){\n                setFormData({ ...formData, type: 'Expense'})\n            } else if(segment.intent.intent === 'add_income'){\n                setFormData({ ...formData, type: 'Income'})\n            }else if (segment.isFinal && segment.intent.intent === \"create_transaction\"){\n                return createTransaction()\n            }else if (segment.isFinal && segment.intent.intent === \"cancel_transaction\"){\n                return setFormData(initialState)\n            }\n\n            segment.entities.forEach((e)=>{\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\n                switch(e.type){\n                    case 'amount':\n                        setFormData({...formData, amount:e.value})\n                        break\n                    case 'category':\n                        if(incomeCategories.map((iC)=>iC.type).includes(category)){\n                        setFormData({...formData, type: 'Income', category})\n                        }else if(incomeCategories.map((iC)=>iC.type).includes(category)){\n                            setFormData({...formData, type: 'Expense', category})\n\n                        }\n                        break\n\n                    case 'date':\n                        setFormData({...formData, date:e.value})\n                        break\n                    default:\n                        break\n                }\n            })\n\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\n                createTransaction(); \n            }\n        }\n    }, [segment])\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories\n    return (\n        <Grid container spacing = {2} >\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs = {12}>\n                <Typography align='center' variant = 'subtitle1' gutterBottom>\n                    {segment && segment.words.map((w)=>w.value).join(\" \")}\n                </Typography>\n            </Grid>\n            <Grid item xs = {6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value = {formData.type} onChange = {(e) => setFormData({\n                        ...formData, type: e.target.value\n                    })}>\n                        <MenuItem value = \"Income\">Income</MenuItem>\n                        <MenuItem value = \"Expense\">Expense</MenuItem>\n                        \n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs = {6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value = {formData.category} onChange = {(e) => setFormData({\n                        ...formData, category: e.target.value\n                    })}>\n                        {\n                            selectedCategories.map((c)=><MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)\n                        }\n                    </Select>\n\n                </FormControl>\n            </Grid>\n            <Grid item xs = {6}>\n                <TextField type = \"number\" label = \"Amount\" fullWidth value={formData.amount} onChange = {(e) => setFormData ({ ...formData, amount: e.target.value})}/>\n\n            </Grid>\n            <Grid item xs = {6}>\n                <TextField type = \"date\" label = \"Date\" fullWidth value={formData.date} onChange = {(e) => setFormData ({ ...formData, date: formatDate(e.target.value)})}/>\n\n            </Grid>\n            <Button className = {classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick = {createTransaction}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form\n","/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/Form/styles.jsx",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/List/List.jsx",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Main/List/styles.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/context/context.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/context/contextReducer.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/constants/categories.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/utils/formatDate.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/useTransactions.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Snackbar/Snackbar.jsx",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/Snackbar/styles.js",[],"/home/viswaas/Projects/Expense-tracker/expense/src/components/InfoCard.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":72,"column":8,"nodeType":"89","endLine":72,"endColumn":17,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"96","text":"97"},[2935,2944],"[createTransaction, formData, segment]"]